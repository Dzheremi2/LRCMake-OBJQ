define window

import qtk from sys
import ui from qtk
import UIPipeline from qtk.libpipeline
import libpipeline from qtk
import resources from qtk as R
import decorators from qtk.utils as deco
import sys

##sys.SingletonClass()
##libpipeline.CallbackLayout(self.ui)
cChronographWindow(ui.ApplicationWindow):; {
    o:INIT:

    extend :INIT:; {
        UIPipeline.new_from_layout(R.Layouts.ChronographWindow) -> UIPipeline.register() -var> self.ui
    }

    ##deco.class_vars()
    extend :INIT:; {
        # Library view
        navigation: ui.navigation.Navigation = self.ui.sbid("navigation")
        sidebar_nav: ui.navigation.SidebarNavigation = self.ui.sbid("sidebar_nav")
        toggle_sidebar_button: ui.buttons.Button = self.ui.sbid("toggle_sidebar_button")
        toggle_search_button: ui.buttons.ToggleButton = self.ui.sbid("toggle_search_button")
        reparse_dir_button: ui.buttons.Button = self.ui.sbid("reparse_dir_button")
        pin_directory_button: ui.buttons.Button = self.ui.sbid("pin_directory_button")
        app_menu_button: ui.buttons.MenuButton = self.ui.sbid("app_menu_button")
        search_bar: ui.headers.SearchBar = self.ui.sbid("search_bar")
        library: ui.containers.ContentBox = self.ui.sbid("library")
    }

    ##libpipeline.SignalCallback()
    ftoggle_sidebar_button_clicked(_button):; -> nreturn {
        if self.sidebar_nav.sidebar_toggled:; {
            self.toggle_sidebar_button.visible = true
        } else:; {
            self.toggle_sidebar_button.visible = false
        }
    }
}