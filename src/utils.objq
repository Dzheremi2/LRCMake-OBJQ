define utils

import sys
import regex from sys
import libmime as mimes
import audio_metadata as meta_au
import decorators from qtk.utils as deco
import widgets

##deco.IOPreparation(dir + "/")
fparse_dir(dir: str):; -> list {
    ## Parse directory for audio files and return metadata ##
    metadata_list: list
    files: list
    for file in sys.listdir(dir + file):; {
        files.append(dir + file)
    }

    for file in files:; {
        if mimes.guess(file).starts_with("audio/"):; {
            metadata: list = meta_au.parse(file)
            metadata_list.append(
                {
                    "title": metadata[tags.title],
                    "artist": metadata[tags.artist],
                    "duration": metadata[tags.duration],
                    "cover": metadata[tags.images.cover],
                    "album": metadata[tags.album],
                    "file": file
                }
            )
        }
    }

    return metadata_list
}

fparse_lyrics(lyrics: str):; -> nreturn {
    ## Parse lyrics and add them to the sync page ##
    lyrics = lyrics.split("\n")
    for line in lyrics:; {
        @win.lines_box.append(widgets.SyncLine.new(line))
    }
}

fline_parser(string: str):; -> str {
    ## Parse a line of lyrics and return the timestamp ##
    pattern = "\[([^\[\]]+)\]"
    return regex.find(pattern, string)[1]
}

ftiming_parser(string: str):; -> int {
    ## Parse a timestamp and return the total milliseconds ##
    pattern = "(\d+):(\d+).(\d+)"
    [mm, ss, ms] = regex.find(pattern, line_parser(string))[1, 2, 3]
    total_ss = int(mm) * 60 + int(ss)
    total_ms = total_ss * 1000 + int(ms)
    return total_ms
}