block:
  import:
    - import qtk from sys
    - import interface from qtk as intrf
    - import icons from intrf as ico
    - import i18n from sys
    - import alignment from intrf as align
    - import inf from sys.math.nums
  define:
    - define layout

layout:
- Window:
    actions: [min, max, close]
    resizeable: true
    RootColumn:
      - intrf.headers.HeaderBar:
          id: "headerbar"
          intrf.positions.start:
            items:
            - intrf.buttons.Button:
                id: "toggle_sidebar_headerbar"
                icon: ico.SIDEBAR_LEFT
                clicked: $ToggleSidebar
            - intrf.buttons.MenuButton:
                id: "open_source"
                icon: ico.OPEN_DIR
                menu:
                  items:
                    - intrf.buttons.MenuButton.menu_entry:
                        text: _("Open Directory")
                        action: "app.select_directory"
            - intrf.buttons.ToggleButton:
                id: "toggle_search"
                icon: ico.SEARCH_LOUPE
                toggled: false
                collapsed: false
          intrf.positions.center:
            items:
              - intrf.header.titleWidget:
                  text: "LRCMake"
          intrf.positions.end:
            items:
              - intrf.buttons.MenuButton:
                  id: "sorting_method"
                  icom: ico.SORTING_DOWNWARDS_ALPHABETICALLY
                  collapsed: true
                  menu:
                    items:
                      - intrf.buttons.MenuButton.menu_entry:
                          text: _("A-Z")
                      - intrf.buttons.MenuButton.menu_entry:
                          text: _("Z-A")
              - intrf.buttons.MenuButton:
                  id: "app_menu"
                  icon: icon.THREE_DOT_MENU
                  menu:
                    items:
                      - intrf.buttons.MenuButton.menu_entry:
                          text: _("Quick Editor")
                      - intrf.useless.Separator:
                          thickness: intrf.types.separator.thickness.MENU_LIST_SEPARATOR
                      - intrf.buttons.MenuButton.menu_entry:
                          text: _("Properties")
                      - intrf.buttons.MenuButton.menu_entry:
                          text: _("Keybindings")
                      - intrf.buttons.MenuButton.menu_entry:
                          text: _("About app")
      - intrf.headers.SearchBar:
          id: "search_bar"
          max-width: 500px
          placeholder-text: _("Search")
          collapsed: bind sbid("toggle_search").toggled
      
      - intrf.containers.ContentBox:
          id: "content_box"
          props:
            restructurize: true
            same-sized: true
            valign: align.START
            halign: align.CENTER
            scrolling-direction: DOWN
            column-spacing: 12px
            row-spacing: 12px
            margin-all: 12px

- intrf.navigation.NavPage:
    id: "sync_nav_page"
    RootColumn:
      - intrf.headers.HeaderBar: bind "headerbar"; {self.sbid("toggle_sidebar_headerbar").collapsed = true; self.id = "sync_headerbar"}
      - Row:
          - props:
              spacing: 8px
          - intrf.images.Image:
              id: "sync_cover"
              width: 160
              height: 160
              styles:
                rounded-corners: 6rp
          - Column:
              - intrf.texts.Label:
                  id: "title_sync"
              - intrf.texts.Label:
                  id: "artist_sync"
              - intrf.media.AudioControls:
                  id: "controls"
          - styles:
              render-background: true
      - Row:
          - props:
              spacing: 6px
              halign: align.CENTER
              margin-bottom: 4px
          - intrf.positions.start:
              - intrf.buttons.Button:
                  id: "sync_button"
                  icon: ico.STOPWATCH_LAP
                  styles:
                    rounded-corners: inf
              - intrf.buttons.Button:
                  id: "replay_button"
                  icon: ico.REPLAY
                  styles:
                    rounded-corners: inf
              - intrf.buttons.Button:
                  id: "sync_back_button"
                  icon: ico.PLAY_TRACK_BACKWARD
                  styles:
                    rounded-corners: inf
              - intrf.buttons.Button:
                  id: "sync_forw_button"
                  icon: ico.PLAY_TRACK_FORWARD
                  styles:
                    rounded-corners: inf
              - intrf.buttons.MenuButton:
                  id: "import_button"
                  icon: ico.DOWNLOAD_PLATE
                  styles:
                    rounded-corners: inf
                    background-color: qtk.colors.user_colors.PRIMARY_ACTION
                    icon-color: qtk.colors.user_colors.REVERSE_PRIMARY_ACTION
                  menu:
                    items:
                      - intrf.buttons.MenuButton.menu_entry:
                          text: _("File")
                          action: "win.import_from_file"
                      - intrf.buttons.MenuButton.menu_entry:
                          text: _("Clipboard")
                          action: "win.import_from_clipboard"
                      - intrf.buttons.MenuButton.menu_entry:
                          text: "LRClib"
                          action: "win.import_from_lrclib"
              - intrf.buttons.MenuButton:
                  id: "export_button"
                  icon: ico.UPLOAD_PLATE
                  styles:
                    rounded-corners: inf
                    background-color: qtk.colors.user_colors.PRIMARY_ACTION
                    icon-color: qtk.colors.user_colors.REVERSE_PRIMARY_ACTION
                  menu:
                    items:
                      - intrf.buttons.MenuButton.menu_entry:
                          text: "LRClib"
                      - intrf.buttons.MenuButton.menu_entry:
                          text: _("Clipboard")
                      - intrf.buttons.MenuButton.menu_entry:
                          text: _("File")
          - intrf.positions.end:
              - intrf.buttons.MenuButton:
                  id: "line_act_button"
                  icon: ico.LETTER_A_CAPITALIZED
                  styles:
                    rounded-corners: inf
                  menu:
                    items:
                      - intrf.buttons.MenuButton.menu_entry:
                          text: _("Remove line")
                      - intrf.buttons.MenuButton.menu_entry:
                          text: _("Prepend line to selected")
                      - intrf.buttons.MenuButton.menu_entry:
                          text: _("Append line to selected")
                      - intrf.buttons.MenuButton.menu_entry:
                          text: _("append line to end")
              - intrf.buttons.Button:
                  id: "file_info_button"
                  icon: ico.INFO_CIRCLED
                  styles:
                    rounded-corners: inf
      - intrf.ScrolledBox:
          - intrf.lists.ListBox:
              id: "lines_box"
              max-width: 550px
              selection-mode: qtk.types.selection_mode.SINGLE
      - Row:
          - intrf.buttons.Button:
              id: "add_line"
              text: _("Add line")
              icon: ico.MATH_PLUS
              
- intrf.navigation.Sidebar:
    id: "sidebar"
    RootColumn:
      - intrf.headers.HeaderBar:
          intrf.positions.start:
            items:
              - intrf.buttons.Button:
                  id: "toggle_sidebar_sidebar"
                  icon: ico.SIDEBAR_LEFT
                  $clicked: ToggleSidebar
          intrf.positions.center:
            items:
              - intrf.header.titleWidget:
                  text: _("Saved")
      - intrf.ScrolledBox:
          - intrf.lists.ListBox:
              - props:
                  id: "sidebar_box"

incode:
# fToggleSidebar():; {
#   if sbid("toggle_sidebar_sidebar").invisible == true:; {
#     sbid("sidebar").toggled = true
#   }
#   else:; {
#     sbid("sidebar").toggled = false
#   }
# }